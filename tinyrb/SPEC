= Methods required and missing to run mspec & rubyspec
FileUtils.mkdir_p
File.exist?
File.open(file, mode, &block)
File.dirname
File.expand_path
File.join
File.basename
File.directory?
File.writable?
File.readlink
File.symlink?
Array#shift
Array#unshift
Array#inject
Array#concat
Array#any?
Array#[#Range]
Array#replace
Array#map
Array#collect
Array#reject
Array#flatten
Array#join
Array#compact
Array#-
Array#values_at
Regexp.escape
Regexp.new
Regexp#matches?
Kernel#`
Kernel#exit(code)
Kernel#print
Kernel.raise
Kernel#Array
Kernel#lambda
Object#=~
Object#!~
Object#!=
Object#^
Object#===
Object#constants
Object#const_defined?
Object#kind_of?
Object#instance_variable_get
Object#instance_variable_set
Object#send
Object#__send__
String#chop
String#gsub
String#gsub!
String#match
String#split
String#strip
String#empty?
String#chomp
String#ljust
String#rjust
IO#write
IO#reopen
IO#rewind
IO#read
IO#close
IO#closed?
IO#path
Fixnum#abs
Hash.new {}
Hash#keys
Hash#values
Process.euid
STDOUT.tty?
Module#const_defined?
Module#const_missing
Module#const_get
Module#instance_methods
Module#private_instance_methods
Module#class_eval
Range#exclude_end?
Time.now
Time#-
ENV.[]
ARGV
__FILE__
RUBY_PLATFORM
RUBY_PATCHLEVEL
$0
$\
STDOUT
STDERR
$stderr
$stdout

= Constructs missing
<<-EOS
next in closure
ensure
?a
?\001
\001
and
or
case ... when
"#{...}"
0xBABE
0b1010
12_345
+=
&&=
%Q{
m(&block)
x ? a : b
:"..."
class << obj; self; end
100.0
&block
